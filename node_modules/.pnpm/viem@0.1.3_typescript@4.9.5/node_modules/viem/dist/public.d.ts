import { P as PublicClient, W as WalletClient } from './createPublicClient-c13b17f9.js';
export { C as CallParameters, at as CallReturnType, au as CreateBlockFilterReturnType, av as CreateEventFilterParameters, aw as CreateEventFilterReturnType, ax as CreatePendingTransactionFilterReturnType, E as EstimateGasParameters, ay as EstimateGasReturnType, az as GetBalanceParameters, aA as GetBalanceReturnType, aC as GetBlockNumberParameters, aD as GetBlockNumberReturnType, aB as GetBlockParameters, aE as GetBlockReturnType, aF as GetBlockTransactionCountParameters, aG as GetBlockTransactionCountReturnType, G as GetBytecodeParameters, q as GetBytecodeReturnType, aH as GetFeeHistoryParameters, aI as GetFeeHistoryReturnType, aJ as GetFilterChangesParameters, aK as GetFilterChangesReturnType, aL as GetFilterLogsParameters, aM as GetFilterLogsReturnType, aN as GetGasPriceReturnType, aP as GetTransactionConfirmationsParameters, aQ as GetTransactionConfirmationsReturnType, aO as GetTransactionParameters, aR as GetTransactionReceiptParameters, aS as GetTransactionReceiptReturnType, aT as GetTransactionReturnType, aU as OnBlock, aV as OnBlockNumberFn, aW as OnBlockNumberParameter, aX as OnBlockParameter, O as OnLogsFn, u as OnLogsParameter, aY as OnTransactionsFn, aZ as OnTransactionsParameter, a_ as ReplacementReason, a$ as ReplacementReturnType, b0 as UninstallFilterParameters, b1 as UninstallFilterReturnType, b2 as WaitForTransactionReceiptParameters, b3 as WaitForTransactionReceiptReturnType, b4 as WatchBlockNumberParameters, b5 as WatchBlocksParameters, b6 as WatchPendingTransactionsParameters, a4 as call, a5 as createBlockFilter, a6 as createEventFilter, a7 as createPendingTransactionFilter, a8 as estimateGas, a9 as getBalance, aa as getBlock, ab as getBlockNumber, ac as getBlockNumberCache, ad as getBlockTransactionCount, H as getBytecode, ae as getChainId, af as getFeeHistory, ag as getFilterChanges, ah as getFilterLogs, aj as getGasPrice, ai as getLogs, ak as getTransaction, al as getTransactionConfirmations, am as getTransactionReceipt, an as uninstallFilter, ao as waitForTransactionReceipt, ap as watchBlockNumber, aq as watchBlocks, ar as watchEvent, as as watchPendingTransactions } from './createPublicClient-c13b17f9.js';
import { f as BlockTag } from './chain-d64be356.js';
import { Address } from 'abitype';
import './eip1193-029d52f0.js';
import './createClient-8575dcd6.js';
import '@wagmi/chains';

type GetTransactionCountParameters = {
    /** The account address. */
    address: Address;
} & ({
    /** The block number. */
    blockNumber?: bigint;
    blockTag?: never;
} | {
    blockNumber?: never;
    /** The block tag. Defaults to 'latest'. */
    blockTag?: BlockTag;
});
type GetTransactionCountReturnType = number;
/**
 * @description Returns the number of transactions an account has broadcast / sent.
 */
declare function getTransactionCount(client: PublicClient | WalletClient, { address, blockTag, blockNumber }: GetTransactionCountParameters): Promise<GetTransactionCountReturnType>;

export { GetTransactionCountParameters, GetTransactionCountReturnType, getTransactionCount };
