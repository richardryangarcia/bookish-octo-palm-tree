import { Narrow, SolidityAddress, SolidityBool, SolidityBytes, SolidityInt, SolidityString, SolidityArrayWithoutTuple, AbiType, AbiParameterToPrimitiveType } from 'abitype';
import { H as Hex } from './chain-d64be356.js';

type PackedAbiType = SolidityAddress | SolidityBool | SolidityBytes | SolidityInt | SolidityString | SolidityArrayWithoutTuple;
type EncodePackedValues<TPackedAbiTypes extends PackedAbiType[] | unknown[]> = {
    [K in keyof TPackedAbiTypes]: TPackedAbiTypes[K] extends AbiType ? AbiParameterToPrimitiveType<{
        type: TPackedAbiTypes[K];
    }> : unknown;
};
declare function encodePacked<TPackedAbiTypes extends PackedAbiType[] | unknown[]>(types: Narrow<TPackedAbiTypes>, values: EncodePackedValues<TPackedAbiTypes>): Hex;

export { encodePacked as e };
