import {
  defineBlock,
  defineChain,
  defineTransaction,
  defineTransactionReceipt,
  defineTransactionRequest
} from "./chunk-I7AINPMM.mjs";

// src/chains.ts
import * as chains from "@wagmi/chains";
var celoFormatters = {
  block: defineBlock({
    exclude: ["difficulty", "gasLimit", "mixHash", "nonce", "uncles"],
    format: (block) => ({
      randomness: block.randomness
    })
  }),
  transaction: defineTransaction({
    format: (transaction) => ({
      feeCurrency: transaction.feeCurrency,
      gatewayFee: transaction.gatewayFee ? BigInt(transaction.gatewayFee) : null,
      gatewayFeeRecipient: transaction.gatewayFeeRecipient
    })
  }),
  transactionReceipt: defineTransactionReceipt({
    format: (transaction) => ({
      feeCurrency: transaction.feeCurrency,
      gatewayFee: transaction.gatewayFee ? BigInt(transaction.gatewayFee) : null,
      gatewayFeeRecipient: transaction.gatewayFeeRecipient
    })
  }),
  transactionRequest: defineTransactionRequest({
    format: (transactionRequest) => ({
      feeCurrency: transactionRequest.feeCurrency,
      gatewayFee: transactionRequest.gatewayFee,
      gatewayFeeRecipient: transactionRequest.gatewayFeeRecipient
    })
  })
};
var arbitrum2 = defineChain(chains.arbitrum);
var arbitrumGoerli2 = defineChain(chains.arbitrumGoerli);
var aurora2 = defineChain(chains.aurora);
var auroraGoerli = defineChain(chains.auroraTestnet);
var avalanche2 = defineChain(chains.avalanche);
var avalancheFuji2 = defineChain(chains.avalancheFuji);
var bronos2 = defineChain(chains.bronos);
var bronosTestnet2 = defineChain(chains.bronosTestnet);
var bsc2 = defineChain(chains.bsc);
var bscTestnet2 = defineChain(chains.bscTestnet);
var canto2 = defineChain(chains.canto);
var celo2 = defineChain({
  ...chains.celo,
  formatters: celoFormatters
});
var celoAlfajores2 = defineChain({
  ...chains.celoAlfajores,
  formatters: celoFormatters
});
var crossbell2 = defineChain(chains.crossbell);
var evmos2 = defineChain(chains.evmos);
var evmosTestnet2 = defineChain(chains.evmosTestnet);
var fantom2 = defineChain(chains.fantom);
var fantomTestnet2 = defineChain(chains.fantomTestnet);
var filecoin2 = defineChain(chains.filecoin);
var filecoinTestnet = defineChain(chains.filecoinHyperspace);
var foundry2 = defineChain(chains.foundry);
var goerli2 = defineChain(chains.goerli);
var gnosis2 = defineChain(chains.gnosis);
var gnosisChiado2 = defineChain(chains.gnosisChiado);
var hardhat2 = defineChain(chains.hardhat);
var iotex2 = defineChain(chains.iotex);
var iotexTestnet2 = defineChain(chains.iotexTestnet);
var localhost2 = defineChain(chains.localhost);
var mainnet2 = defineChain(chains.mainnet);
var metis2 = defineChain(chains.metis);
var metisGoerli2 = defineChain(chains.metisGoerli);
var optimism2 = defineChain(chains.optimism);
var optimismGoerli2 = defineChain(chains.optimismGoerli);
var polygon2 = defineChain(chains.polygon);
var polygonMumbai2 = defineChain(chains.polygonMumbai);
var sepolia2 = defineChain(chains.sepolia);
var taraxa2 = defineChain(chains.taraxa);
var taraxaTestnet2 = defineChain(chains.taraxaTestnet);
var zkSync2 = defineChain(chains.zkSync);
var zkSyncTestnet2 = defineChain(chains.zkSyncTestnet);
export {
  arbitrum2 as arbitrum,
  arbitrumGoerli2 as arbitrumGoerli,
  aurora2 as aurora,
  auroraGoerli,
  avalanche2 as avalanche,
  avalancheFuji2 as avalancheFuji,
  bronos2 as bronos,
  bronosTestnet2 as bronosTestnet,
  bsc2 as bsc,
  bscTestnet2 as bscTestnet,
  canto2 as canto,
  celo2 as celo,
  celoAlfajores2 as celoAlfajores,
  crossbell2 as crossbell,
  defineChain,
  evmos2 as evmos,
  evmosTestnet2 as evmosTestnet,
  fantom2 as fantom,
  fantomTestnet2 as fantomTestnet,
  filecoin2 as filecoin,
  filecoinTestnet,
  foundry2 as foundry,
  gnosis2 as gnosis,
  gnosisChiado2 as gnosisChiado,
  goerli2 as goerli,
  hardhat2 as hardhat,
  iotex2 as iotex,
  iotexTestnet2 as iotexTestnet,
  localhost2 as localhost,
  mainnet2 as mainnet,
  metis2 as metis,
  metisGoerli2 as metisGoerli,
  optimism2 as optimism,
  optimismGoerli2 as optimismGoerli,
  polygon2 as polygon,
  polygonMumbai2 as polygonMumbai,
  sepolia2 as sepolia,
  taraxa2 as taraxa,
  taraxaTestnet2 as taraxaTestnet,
  zkSync2 as zkSync,
  zkSyncTestnet2 as zkSyncTestnet
};
//# sourceMappingURL=chains.mjs.map