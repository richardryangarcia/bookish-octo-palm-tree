"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { newObj[key] = obj[key]; } } } newObj.default = obj; return newObj; } }





var _chunkCVKYFX2Wjs = require('./chunk-CVKYFX2W.js');

// src/chains.ts
var _chains = require('@wagmi/chains'); var chains = _interopRequireWildcard(_chains);
var celoFormatters = {
  block: _chunkCVKYFX2Wjs.defineBlock.call(void 0, {
    exclude: ["difficulty", "gasLimit", "mixHash", "nonce", "uncles"],
    format: (block) => ({
      randomness: block.randomness
    })
  }),
  transaction: _chunkCVKYFX2Wjs.defineTransaction.call(void 0, {
    format: (transaction) => ({
      feeCurrency: transaction.feeCurrency,
      gatewayFee: transaction.gatewayFee ? BigInt(transaction.gatewayFee) : null,
      gatewayFeeRecipient: transaction.gatewayFeeRecipient
    })
  }),
  transactionReceipt: _chunkCVKYFX2Wjs.defineTransactionReceipt.call(void 0, {
    format: (transaction) => ({
      feeCurrency: transaction.feeCurrency,
      gatewayFee: transaction.gatewayFee ? BigInt(transaction.gatewayFee) : null,
      gatewayFeeRecipient: transaction.gatewayFeeRecipient
    })
  }),
  transactionRequest: _chunkCVKYFX2Wjs.defineTransactionRequest.call(void 0, {
    format: (transactionRequest) => ({
      feeCurrency: transactionRequest.feeCurrency,
      gatewayFee: transactionRequest.gatewayFee,
      gatewayFeeRecipient: transactionRequest.gatewayFeeRecipient
    })
  })
};
var arbitrum2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.arbitrum);
var arbitrumGoerli2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.arbitrumGoerli);
var aurora2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.aurora);
var auroraGoerli = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.auroraTestnet);
var avalanche2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.avalanche);
var avalancheFuji2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.avalancheFuji);
var baseGoerli2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.baseGoerli);
var boba2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.boba);
var bronos2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.bronos);
var bronosTestnet2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.bronosTestnet);
var bsc2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.bsc);
var bscTestnet2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.bscTestnet);
var canto2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.canto);
var celo2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, {
  ...chains.celo,
  formatters: celoFormatters
});
var celoAlfajores2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, {
  ...chains.celoAlfajores,
  formatters: celoFormatters
});
var crossbell2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.crossbell);
var evmos2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.evmos);
var evmosTestnet2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.evmosTestnet);
var fantom2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.fantom);
var fantomTestnet2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.fantomTestnet);
var filecoin2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.filecoin);
var filecoinCalibration2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.filecoinCalibration);
var filecoinHyperspace2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.filecoinHyperspace);
var flare2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.flare);
var flareTestnet2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.flareTestnet);
var foundry2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.foundry);
var goerli2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.goerli);
var gnosis2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.gnosis);
var gnosisChiado2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.gnosisChiado);
var hardhat2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.hardhat);
var harmonyOne2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.harmonyOne);
var iotex2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.iotex);
var iotexTestnet2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.iotexTestnet);
var localhost2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.localhost);
var mainnet2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.mainnet);
var metis2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.metis);
var metisGoerli2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.metisGoerli);
var moonbaseAlpha2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.moonbaseAlpha);
var moonbeam2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.moonbeam);
var moonriver2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.moonriver);
var okc2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.okc);
var optimism2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.optimism);
var optimismGoerli2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.optimismGoerli);
var polygon2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.polygon);
var polygonMumbai2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.polygonMumbai);
var polygonZkEvmTestnet2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.polygonZkEvmTestnet);
var sepolia2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.sepolia);
var shardeumSphinx2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.shardeumSphinx);
var songbird2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.songbird);
var songbirdTestnet2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.songbirdTestnet);
var taraxa2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.taraxa);
var taraxaTestnet2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.taraxaTestnet);
var telos2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.telos);
var telosTestnet2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.telosTestnet);
var zhejiang2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.zhejiang);
var zkSync2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.zkSync);
var zkSyncTestnet2 = _chunkCVKYFX2Wjs.defineChain.call(void 0, chains.zkSyncTestnet);



























































exports.arbitrum = arbitrum2; exports.arbitrumGoerli = arbitrumGoerli2; exports.aurora = aurora2; exports.auroraGoerli = auroraGoerli; exports.avalanche = avalanche2; exports.avalancheFuji = avalancheFuji2; exports.baseGoerli = baseGoerli2; exports.boba = boba2; exports.bronos = bronos2; exports.bronosTestnet = bronosTestnet2; exports.bsc = bsc2; exports.bscTestnet = bscTestnet2; exports.canto = canto2; exports.celo = celo2; exports.celoAlfajores = celoAlfajores2; exports.crossbell = crossbell2; exports.defineChain = _chunkCVKYFX2Wjs.defineChain; exports.evmos = evmos2; exports.evmosTestnet = evmosTestnet2; exports.fantom = fantom2; exports.fantomTestnet = fantomTestnet2; exports.filecoin = filecoin2; exports.filecoinCalibration = filecoinCalibration2; exports.filecoinHyperspace = filecoinHyperspace2; exports.flare = flare2; exports.flareTestnet = flareTestnet2; exports.foundry = foundry2; exports.gnosis = gnosis2; exports.gnosisChiado = gnosisChiado2; exports.goerli = goerli2; exports.hardhat = hardhat2; exports.harmonyOne = harmonyOne2; exports.iotex = iotex2; exports.iotexTestnet = iotexTestnet2; exports.localhost = localhost2; exports.mainnet = mainnet2; exports.metis = metis2; exports.metisGoerli = metisGoerli2; exports.moonbaseAlpha = moonbaseAlpha2; exports.moonbeam = moonbeam2; exports.moonriver = moonriver2; exports.okc = okc2; exports.optimism = optimism2; exports.optimismGoerli = optimismGoerli2; exports.polygon = polygon2; exports.polygonMumbai = polygonMumbai2; exports.polygonZkEvmTestnet = polygonZkEvmTestnet2; exports.sepolia = sepolia2; exports.shardeumSphinx = shardeumSphinx2; exports.songbird = songbird2; exports.songbirdTestnet = songbirdTestnet2; exports.taraxa = taraxa2; exports.taraxaTestnet = taraxaTestnet2; exports.telos = telos2; exports.telosTestnet = telosTestnet2; exports.zhejiang = zhejiang2; exports.zkSync = zkSync2; exports.zkSyncTestnet = zkSyncTestnet2;
//# sourceMappingURL=chains.js.map